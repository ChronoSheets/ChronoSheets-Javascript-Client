/**
 * ChronoSheets API
 * <div style='font-size: 14px!important;font-family: Open Sans,sans-serif!important;color: #3b4151!important;'><p>      ChronoSheets is a flexible timesheet solution for small to medium businesses, it is free for small teams of up to 3 and there are iOS and Android apps available.  Use the ChronoSheets API to create your own custom integrations.  Before starting, sign up for a ChronoSheets account at <a target='_BLANK' href='http://tsheets.xyz/signup'>http://tsheets.xyz/signup</a>.  </p></div><div id='cs-extra-info'></div>
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TripCoordinate from './TripCoordinate';

/**
 * The OrgReportTrip model module.
 * @module ChronoSheetsClient/ChronoSheetsClientLibModel/OrgReportTrip
 * @version 1.0.0
 */
class OrgReportTrip {
    /**
     * Constructs a new <code>OrgReportTrip</code>.
     * @alias module:ChronoSheetsClient/ChronoSheetsClientLibModel/OrgReportTrip
     */
    constructor() { 
        
        OrgReportTrip.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OrgReportTrip</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:ChronoSheetsClient/ChronoSheetsClientLibModel/OrgReportTrip} obj Optional instance to populate.
     * @return {module:ChronoSheetsClient/ChronoSheetsClientLibModel/OrgReportTrip} The populated <code>OrgReportTrip</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrgReportTrip();

            if (data.hasOwnProperty('Username')) {
                obj['Username'] = ApiClient.convertToType(data['Username'], 'String');
            }
            if (data.hasOwnProperty('EmailAddress')) {
                obj['EmailAddress'] = ApiClient.convertToType(data['EmailAddress'], 'String');
            }
            if (data.hasOwnProperty('FirstName')) {
                obj['FirstName'] = ApiClient.convertToType(data['FirstName'], 'String');
            }
            if (data.hasOwnProperty('LastName')) {
                obj['LastName'] = ApiClient.convertToType(data['LastName'], 'String');
            }
            if (data.hasOwnProperty('TripId')) {
                obj['TripId'] = ApiClient.convertToType(data['TripId'], 'Number');
            }
            if (data.hasOwnProperty('TimesheetId')) {
                obj['TimesheetId'] = ApiClient.convertToType(data['TimesheetId'], 'Number');
            }
            if (data.hasOwnProperty('VehicleId')) {
                obj['VehicleId'] = ApiClient.convertToType(data['VehicleId'], 'Number');
            }
            if (data.hasOwnProperty('UserId')) {
                obj['UserId'] = ApiClient.convertToType(data['UserId'], 'Number');
            }
            if (data.hasOwnProperty('OrgId')) {
                obj['OrgId'] = ApiClient.convertToType(data['OrgId'], 'Number');
            }
            if (data.hasOwnProperty('MobilePlatform')) {
                obj['MobilePlatform'] = ApiClient.convertToType(data['MobilePlatform'], 'String');
            }
            if (data.hasOwnProperty('StartDate')) {
                obj['StartDate'] = ApiClient.convertToType(data['StartDate'], 'Date');
            }
            if (data.hasOwnProperty('EndDate')) {
                obj['EndDate'] = ApiClient.convertToType(data['EndDate'], 'Date');
            }
            if (data.hasOwnProperty('VehicleName')) {
                obj['VehicleName'] = ApiClient.convertToType(data['VehicleName'], 'String');
            }
            if (data.hasOwnProperty('VehicleMake')) {
                obj['VehicleMake'] = ApiClient.convertToType(data['VehicleMake'], 'String');
            }
            if (data.hasOwnProperty('VehicleModel')) {
                obj['VehicleModel'] = ApiClient.convertToType(data['VehicleModel'], 'String');
            }
            if (data.hasOwnProperty('VehicleYear')) {
                obj['VehicleYear'] = ApiClient.convertToType(data['VehicleYear'], 'String');
            }
            if (data.hasOwnProperty('CostPerKilometer')) {
                obj['CostPerKilometer'] = ApiClient.convertToType(data['CostPerKilometer'], 'Number');
            }
            if (data.hasOwnProperty('TripTotalCost')) {
                obj['TripTotalCost'] = ApiClient.convertToType(data['TripTotalCost'], 'Number');
            }
            if (data.hasOwnProperty('TotalTripDistanceMeters')) {
                obj['TotalTripDistanceMeters'] = ApiClient.convertToType(data['TotalTripDistanceMeters'], 'Number');
            }
            if (data.hasOwnProperty('StartAddress')) {
                obj['StartAddress'] = ApiClient.convertToType(data['StartAddress'], 'String');
            }
            if (data.hasOwnProperty('EndAddress')) {
                obj['EndAddress'] = ApiClient.convertToType(data['EndAddress'], 'String');
            }
            if (data.hasOwnProperty('PathCoordinates')) {
                obj['PathCoordinates'] = ApiClient.convertToType(data['PathCoordinates'], [TripCoordinate]);
            }
            if (data.hasOwnProperty('CacheExpiryDate')) {
                obj['CacheExpiryDate'] = ApiClient.convertToType(data['CacheExpiryDate'], 'Date');
            }
        }
        return obj;
    }


}

/**
 * @member {String} Username
 */
OrgReportTrip.prototype['Username'] = undefined;

/**
 * @member {String} EmailAddress
 */
OrgReportTrip.prototype['EmailAddress'] = undefined;

/**
 * @member {String} FirstName
 */
OrgReportTrip.prototype['FirstName'] = undefined;

/**
 * @member {String} LastName
 */
OrgReportTrip.prototype['LastName'] = undefined;

/**
 * @member {Number} TripId
 */
OrgReportTrip.prototype['TripId'] = undefined;

/**
 * @member {Number} TimesheetId
 */
OrgReportTrip.prototype['TimesheetId'] = undefined;

/**
 * @member {Number} VehicleId
 */
OrgReportTrip.prototype['VehicleId'] = undefined;

/**
 * @member {Number} UserId
 */
OrgReportTrip.prototype['UserId'] = undefined;

/**
 * @member {Number} OrgId
 */
OrgReportTrip.prototype['OrgId'] = undefined;

/**
 * @member {module:ChronoSheetsClient/ChronoSheetsClientLibModel/OrgReportTrip.MobilePlatformEnum} MobilePlatform
 */
OrgReportTrip.prototype['MobilePlatform'] = undefined;

/**
 * @member {Date} StartDate
 */
OrgReportTrip.prototype['StartDate'] = undefined;

/**
 * @member {Date} EndDate
 */
OrgReportTrip.prototype['EndDate'] = undefined;

/**
 * @member {String} VehicleName
 */
OrgReportTrip.prototype['VehicleName'] = undefined;

/**
 * @member {String} VehicleMake
 */
OrgReportTrip.prototype['VehicleMake'] = undefined;

/**
 * @member {String} VehicleModel
 */
OrgReportTrip.prototype['VehicleModel'] = undefined;

/**
 * @member {String} VehicleYear
 */
OrgReportTrip.prototype['VehicleYear'] = undefined;

/**
 * @member {Number} CostPerKilometer
 */
OrgReportTrip.prototype['CostPerKilometer'] = undefined;

/**
 * @member {Number} TripTotalCost
 */
OrgReportTrip.prototype['TripTotalCost'] = undefined;

/**
 * @member {Number} TotalTripDistanceMeters
 */
OrgReportTrip.prototype['TotalTripDistanceMeters'] = undefined;

/**
 * @member {String} StartAddress
 */
OrgReportTrip.prototype['StartAddress'] = undefined;

/**
 * @member {String} EndAddress
 */
OrgReportTrip.prototype['EndAddress'] = undefined;

/**
 * @member {Array.<module:ChronoSheetsClient/ChronoSheetsClientLibModel/TripCoordinate>} PathCoordinates
 */
OrgReportTrip.prototype['PathCoordinates'] = undefined;

/**
 * @member {Date} CacheExpiryDate
 */
OrgReportTrip.prototype['CacheExpiryDate'] = undefined;





/**
 * Allowed values for the <code>MobilePlatform</code> property.
 * @enum {String}
 * @readonly
 */
OrgReportTrip['MobilePlatformEnum'] = {

    /**
     * value: "Unknown"
     * @const
     */
    "Unknown": "Unknown",

    /**
     * value: "iOS"
     * @const
     */
    "iOS": "iOS",

    /**
     * value: "Android"
     * @const
     */
    "Android": "Android"
};



export default OrgReportTrip;

