/**
 * ChronoSheets API
 * <div style='font-size: 14px!important;font-family: Open Sans,sans-serif!important;color: #3b4151!important;'><p>      ChronoSheets is a flexible timesheet solution for small to medium businesses, it is free for small teams of up to 3 and there are iOS and Android apps available.  Use the ChronoSheets API to create your own custom integrations.  Before starting, sign up for a ChronoSheets account at <a target='_BLANK' href='http://tsheets.xyz/signup'>http://tsheets.xyz/signup</a>.  </p></div><div id='cs-extra-info'></div>
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OrganisationGroup model module.
 * @module ChronoSheetsClient/ChronoSheetsClientLibModel/OrganisationGroup
 * @version 1.0.0
 */
class OrganisationGroup {
    /**
     * Constructs a new <code>OrganisationGroup</code>.
     * An organisation group.  Organisation groups are used throughout ChronoSheets to assign many groups to one alert, action or restriction.  E.g. you can assign an organisation group to receive geofence alerts, or you could restrict access to vehicles to users within an organisation group.
     * @alias module:ChronoSheetsClient/ChronoSheetsClientLibModel/OrganisationGroup
     */
    constructor() { 
        
        OrganisationGroup.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OrganisationGroup</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:ChronoSheetsClient/ChronoSheetsClientLibModel/OrganisationGroup} obj Optional instance to populate.
     * @return {module:ChronoSheetsClient/ChronoSheetsClientLibModel/OrganisationGroup} The populated <code>OrganisationGroup</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrganisationGroup();

            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'Number');
            }
            if (data.hasOwnProperty('OrganisationId')) {
                obj['OrganisationId'] = ApiClient.convertToType(data['OrganisationId'], 'Number');
            }
            if (data.hasOwnProperty('OrganisationGroupName')) {
                obj['OrganisationGroupName'] = ApiClient.convertToType(data['OrganisationGroupName'], 'String');
            }
            if (data.hasOwnProperty('IsDeleted')) {
                obj['IsDeleted'] = ApiClient.convertToType(data['IsDeleted'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * The ID of the organisation group
 * @member {Number} Id
 */
OrganisationGroup.prototype['Id'] = undefined;

/**
 * The ID of the organisation
 * @member {Number} OrganisationId
 */
OrganisationGroup.prototype['OrganisationId'] = undefined;

/**
 * The descriptive name of the organisation group
 * @member {String} OrganisationGroupName
 */
OrganisationGroup.prototype['OrganisationGroupName'] = undefined;

/**
 * Whether or not the organisation group is deleted
 * @member {Boolean} IsDeleted
 */
OrganisationGroup.prototype['IsDeleted'] = undefined;






export default OrganisationGroup;

