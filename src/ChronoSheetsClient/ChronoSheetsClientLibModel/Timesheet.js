/**
 * ChronoSheets API
 * <div style='font-size: 14px!important;font-family: Open Sans,sans-serif!important;color: #3b4151!important;'><p>      ChronoSheets is a flexible timesheet solution for small to medium businesses, it is free for small teams of up to 3 and there are iOS and Android apps available.  Use the ChronoSheets API to create your own custom integrations.  Before starting, sign up for a ChronoSheets account at <a target='_BLANK' href='http://tsheets.xyz/signup'>http://tsheets.xyz/signup</a>.  </p></div><div id='cs-extra-info'></div>
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Timesheet model module.
 * @module ChronoSheetsClient/ChronoSheetsClientLibModel/Timesheet
 * @version 1.0.0
 */
class Timesheet {
    /**
     * Constructs a new <code>Timesheet</code>.
     * @alias module:ChronoSheetsClient/ChronoSheetsClientLibModel/Timesheet
     */
    constructor() { 
        
        Timesheet.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Timesheet</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:ChronoSheetsClient/ChronoSheetsClientLibModel/Timesheet} obj Optional instance to populate.
     * @return {module:ChronoSheetsClient/ChronoSheetsClientLibModel/Timesheet} The populated <code>Timesheet</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Timesheet();

            if (data.hasOwnProperty('TimesheetId')) {
                obj['TimesheetId'] = ApiClient.convertToType(data['TimesheetId'], 'Number');
            }
            if (data.hasOwnProperty('UserId')) {
                obj['UserId'] = ApiClient.convertToType(data['UserId'], 'Number');
            }
            if (data.hasOwnProperty('JobId')) {
                obj['JobId'] = ApiClient.convertToType(data['JobId'], 'Number');
            }
            if (data.hasOwnProperty('TaskId')) {
                obj['TaskId'] = ApiClient.convertToType(data['TaskId'], 'Number');
            }
            if (data.hasOwnProperty('StartDateTime')) {
                obj['StartDateTime'] = ApiClient.convertToType(data['StartDateTime'], 'Date');
            }
            if (data.hasOwnProperty('EndDateTime')) {
                obj['EndDateTime'] = ApiClient.convertToType(data['EndDateTime'], 'Date');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('TripId')) {
                obj['TripId'] = ApiClient.convertToType(data['TripId'], 'Number');
            }
            if (data.hasOwnProperty('FileAttachmentCount')) {
                obj['FileAttachmentCount'] = ApiClient.convertToType(data['FileAttachmentCount'], 'Number');
            }
            if (data.hasOwnProperty('PayAmount')) {
                obj['PayAmount'] = ApiClient.convertToType(data['PayAmount'], 'Number');
            }
            if (data.hasOwnProperty('OvertimePayAmount')) {
                obj['OvertimePayAmount'] = ApiClient.convertToType(data['OvertimePayAmount'], 'Number');
            }
            if (data.hasOwnProperty('IncludesOvertime')) {
                obj['IncludesOvertime'] = ApiClient.convertToType(data['IncludesOvertime'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * @member {Number} TimesheetId
 */
Timesheet.prototype['TimesheetId'] = undefined;

/**
 * @member {Number} UserId
 */
Timesheet.prototype['UserId'] = undefined;

/**
 * @member {Number} JobId
 */
Timesheet.prototype['JobId'] = undefined;

/**
 * @member {Number} TaskId
 */
Timesheet.prototype['TaskId'] = undefined;

/**
 * @member {Date} StartDateTime
 */
Timesheet.prototype['StartDateTime'] = undefined;

/**
 * @member {Date} EndDateTime
 */
Timesheet.prototype['EndDateTime'] = undefined;

/**
 * @member {String} Description
 */
Timesheet.prototype['Description'] = undefined;

/**
 * @member {Number} TripId
 */
Timesheet.prototype['TripId'] = undefined;

/**
 * @member {Number} FileAttachmentCount
 */
Timesheet.prototype['FileAttachmentCount'] = undefined;

/**
 * @member {Number} PayAmount
 */
Timesheet.prototype['PayAmount'] = undefined;

/**
 * @member {Number} OvertimePayAmount
 */
Timesheet.prototype['OvertimePayAmount'] = undefined;

/**
 * @member {Boolean} IncludesOvertime
 */
Timesheet.prototype['IncludesOvertime'] = undefined;






export default Timesheet;

