/**
 * ChronoSheets API
 * <div style='font-size: 14px!important;font-family: Open Sans,sans-serif!important;color: #3b4151!important;'><p>      ChronoSheets is a flexible timesheet solution for small to medium businesses, it is free for small teams of up to 3 and there are iOS and Android apps available.  Use the ChronoSheets API to create your own custom integrations.  Before starting, sign up for a ChronoSheets account at <a target='_BLANK' href='http://tsheets.xyz/signup'>http://tsheets.xyz/signup</a>.  </p></div><div id='cs-extra-info'></div>
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InsertUserRequest model module.
 * @module ChronoSheetsClient/ChronoSheetsClientLibModel/InsertUserRequest
 * @version 1.0.0
 */
class InsertUserRequest {
    /**
     * Constructs a new <code>InsertUserRequest</code>.
     * Fields for Inserting a new User account (employee) under your Organisation in ChronoSheets
     * @alias module:ChronoSheetsClient/ChronoSheetsClientLibModel/InsertUserRequest
     */
    constructor() { 
        
        InsertUserRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InsertUserRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:ChronoSheetsClient/ChronoSheetsClientLibModel/InsertUserRequest} obj Optional instance to populate.
     * @return {module:ChronoSheetsClient/ChronoSheetsClientLibModel/InsertUserRequest} The populated <code>InsertUserRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InsertUserRequest();

            if (data.hasOwnProperty('EmailAddress')) {
                obj['EmailAddress'] = ApiClient.convertToType(data['EmailAddress'], 'String');
            }
            if (data.hasOwnProperty('FirstName')) {
                obj['FirstName'] = ApiClient.convertToType(data['FirstName'], 'String');
            }
            if (data.hasOwnProperty('LastName')) {
                obj['LastName'] = ApiClient.convertToType(data['LastName'], 'String');
            }
            if (data.hasOwnProperty('IsSubscribedToNewsletter')) {
                obj['IsSubscribedToNewsletter'] = ApiClient.convertToType(data['IsSubscribedToNewsletter'], 'Boolean');
            }
            if (data.hasOwnProperty('Roles')) {
                obj['Roles'] = ApiClient.convertToType(data['Roles'], 'Number');
            }
            if (data.hasOwnProperty('AlertSettings')) {
                obj['AlertSettings'] = ApiClient.convertToType(data['AlertSettings'], 'Number');
            }
            if (data.hasOwnProperty('UserName')) {
                obj['UserName'] = ApiClient.convertToType(data['UserName'], 'String');
            }
            if (data.hasOwnProperty('HourlyPayRate')) {
                obj['HourlyPayRate'] = ApiClient.convertToType(data['HourlyPayRate'], 'Number');
            }
            if (data.hasOwnProperty('HourlyOvertimePayRate')) {
                obj['HourlyOvertimePayRate'] = ApiClient.convertToType(data['HourlyOvertimePayRate'], 'Number');
            }
            if (data.hasOwnProperty('CurrentDate')) {
                obj['CurrentDate'] = ApiClient.convertToType(data['CurrentDate'], 'Date');
            }
        }
        return obj;
    }


}

/**
 * The Email Address of the employee
 * @member {String} EmailAddress
 */
InsertUserRequest.prototype['EmailAddress'] = undefined;

/**
 * The First Name of the employee
 * @member {String} FirstName
 */
InsertUserRequest.prototype['FirstName'] = undefined;

/**
 * The Last Name of the employee
 * @member {String} LastName
 */
InsertUserRequest.prototype['LastName'] = undefined;

/**
 * Whether or not the employee is subscribed to ChronoSheets newsletters
 * @member {Boolean} IsSubscribedToNewsletter
 */
InsertUserRequest.prototype['IsSubscribedToNewsletter'] = undefined;

/**
 * A BIT field designating which Roles/Permissions the employee will have when they sign in.  See the {timesheets.types.Enums.UserRoles} Enum for more details
 * @member {Number} Roles
 */
InsertUserRequest.prototype['Roles'] = undefined;

/**
 * A BIT field designating which Alerts the employee will receive.  See the {timesheets.types.Enums.AlertSettings} Enum for more details
 * @member {Number} AlertSettings
 */
InsertUserRequest.prototype['AlertSettings'] = undefined;

/**
 * The UserName of the employee.  This can be used when logging into ChronoSheets
 * @member {String} UserName
 */
InsertUserRequest.prototype['UserName'] = undefined;

/**
 * Set the starting usual Hourly Pay Rate with this value.  This is the Pay Rate the employee receives for working during Rostered Hours
 * @member {Number} HourlyPayRate
 */
InsertUserRequest.prototype['HourlyPayRate'] = undefined;

/**
 * Set the starting usual Overtime Hourly Pay Rate with this value.  This is the Pay Rate the employee receives for working outside of Rostered Hours
 * @member {Number} HourlyOvertimePayRate
 */
InsertUserRequest.prototype['HourlyOvertimePayRate'] = undefined;

/**
 * The Current date time
 * @member {Date} CurrentDate
 */
InsertUserRequest.prototype['CurrentDate'] = undefined;






export default InsertUserRequest;

