/*
 * ChronoSheets API
 * <div style='font-size: 14px!important;font-family: Open Sans,sans-serif!important;color: #3b4151!important;'><p>      ChronoSheets is a flexible timesheet solution for small to medium businesses, it is free for small teams of up to 3 and there are iOS and Android apps available.  Use the ChronoSheets API to create your own custom integrations.  Before starting, sign up for a ChronoSheets account at <a target='_BLANK' href='http://tsheets.xyz/signup'>http://tsheets.xyz/signup</a>.  </p></div><div id='cs-extra-info'></div>
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.14
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ChronoSheetsClient/ApiClient', 'ChronoSheetsClient/ChronoSheetsClientLibModel/CSClientSeriesReportItem', 'ChronoSheetsClient/ChronoSheetsClientLibModel/CSClientTotalsReportItem', 'ChronoSheetsClient/ChronoSheetsClientLibModel/CSJobSeriesReportItem', 'ChronoSheetsClient/ChronoSheetsClientLibModel/CSJobTotalsReportItem', 'ChronoSheetsClient/ChronoSheetsClientLibModel/CSProjectSeriesReportItem', 'ChronoSheetsClient/ChronoSheetsClientLibModel/CSProjectTotalsReportItem', 'ChronoSheetsClient/ChronoSheetsClientLibModel/CSTaskSeriesReportItem', 'ChronoSheetsClient/ChronoSheetsClientLibModel/CSTaskTotalsReportItem'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./CSClientSeriesReportItem'), require('./CSClientTotalsReportItem'), require('./CSJobSeriesReportItem'), require('./CSJobTotalsReportItem'), require('./CSProjectSeriesReportItem'), require('./CSProjectTotalsReportItem'), require('./CSTaskSeriesReportItem'), require('./CSTaskTotalsReportItem'));
  } else {
    // Browser globals (root is window)
    if (!root.ChronoSheetsApi) {
      root.ChronoSheetsApi = {};
    }
    root.ChronoSheetsApi.CSCombinedReportsData = factory(root.ChronoSheetsApi.ApiClient, root.ChronoSheetsApi.CSClientSeriesReportItem, root.ChronoSheetsApi.CSClientTotalsReportItem, root.ChronoSheetsApi.CSJobSeriesReportItem, root.ChronoSheetsApi.CSJobTotalsReportItem, root.ChronoSheetsApi.CSProjectSeriesReportItem, root.ChronoSheetsApi.CSProjectTotalsReportItem, root.ChronoSheetsApi.CSTaskSeriesReportItem, root.ChronoSheetsApi.CSTaskTotalsReportItem);
  }
}(this, function(ApiClient, CSClientSeriesReportItem, CSClientTotalsReportItem, CSJobSeriesReportItem, CSJobTotalsReportItem, CSProjectSeriesReportItem, CSProjectTotalsReportItem, CSTaskSeriesReportItem, CSTaskTotalsReportItem) {
  'use strict';

  /**
   * The CSCombinedReportsData model module.
   * @module ChronoSheetsClient/ChronoSheetsClientLibModel/CSCombinedReportsData
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>CSCombinedReportsData</code>.
   * @alias module:ChronoSheetsClient/ChronoSheetsClientLibModel/CSCombinedReportsData
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>CSCombinedReportsData</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:ChronoSheetsClient/ChronoSheetsClientLibModel/CSCombinedReportsData} obj Optional instance to populate.
   * @return {module:ChronoSheetsClient/ChronoSheetsClientLibModel/CSCombinedReportsData} The populated <code>CSCombinedReportsData</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('SeriesJobCodes'))
        obj.seriesJobCodes = ApiClient.convertToType(data['SeriesJobCodes'], [CSJobSeriesReportItem]);
      if (data.hasOwnProperty('SeriesTasks'))
        obj.seriesTasks = ApiClient.convertToType(data['SeriesTasks'], [CSTaskSeriesReportItem]);
      if (data.hasOwnProperty('SeriesClients'))
        obj.seriesClients = ApiClient.convertToType(data['SeriesClients'], [CSClientSeriesReportItem]);
      if (data.hasOwnProperty('SeriesProjects'))
        obj.seriesProjects = ApiClient.convertToType(data['SeriesProjects'], [CSProjectSeriesReportItem]);
      if (data.hasOwnProperty('TotalsJobCodes'))
        obj.totalsJobCodes = ApiClient.convertToType(data['TotalsJobCodes'], [CSJobTotalsReportItem]);
      if (data.hasOwnProperty('TotalsTasks'))
        obj.totalsTasks = ApiClient.convertToType(data['TotalsTasks'], [CSTaskTotalsReportItem]);
      if (data.hasOwnProperty('TotalsClients'))
        obj.totalsClients = ApiClient.convertToType(data['TotalsClients'], [CSClientTotalsReportItem]);
      if (data.hasOwnProperty('TotalsProjects'))
        obj.totalsProjects = ApiClient.convertToType(data['TotalsProjects'], [CSProjectTotalsReportItem]);
    }
    return obj;
  }

  /**
   * @member {Array.<module:ChronoSheetsClient/ChronoSheetsClientLibModel/CSJobSeriesReportItem>} seriesJobCodes
   */
  exports.prototype.seriesJobCodes = undefined;

  /**
   * @member {Array.<module:ChronoSheetsClient/ChronoSheetsClientLibModel/CSTaskSeriesReportItem>} seriesTasks
   */
  exports.prototype.seriesTasks = undefined;

  /**
   * @member {Array.<module:ChronoSheetsClient/ChronoSheetsClientLibModel/CSClientSeriesReportItem>} seriesClients
   */
  exports.prototype.seriesClients = undefined;

  /**
   * @member {Array.<module:ChronoSheetsClient/ChronoSheetsClientLibModel/CSProjectSeriesReportItem>} seriesProjects
   */
  exports.prototype.seriesProjects = undefined;

  /**
   * @member {Array.<module:ChronoSheetsClient/ChronoSheetsClientLibModel/CSJobTotalsReportItem>} totalsJobCodes
   */
  exports.prototype.totalsJobCodes = undefined;

  /**
   * @member {Array.<module:ChronoSheetsClient/ChronoSheetsClientLibModel/CSTaskTotalsReportItem>} totalsTasks
   */
  exports.prototype.totalsTasks = undefined;

  /**
   * @member {Array.<module:ChronoSheetsClient/ChronoSheetsClientLibModel/CSClientTotalsReportItem>} totalsClients
   */
  exports.prototype.totalsClients = undefined;

  /**
   * @member {Array.<module:ChronoSheetsClient/ChronoSheetsClientLibModel/CSProjectTotalsReportItem>} totalsProjects
   */
  exports.prototype.totalsProjects = undefined;

  return exports;

}));
