/**
 * ChronoSheets API
 * <div style='font-size: 14px!important;font-family: Open Sans,sans-serif!important;color: #3b4151!important;'><p>      ChronoSheets is a flexible timesheet solution for small to medium businesses, it is free for small teams of up to 3 and there are iOS and Android apps available.  Use the ChronoSheets API to create your own custom integrations.  Before starting, sign up for a ChronoSheets account at <a target='_BLANK' href='http://tsheets.xyz/signup'>http://tsheets.xyz/signup</a>.  </p></div><div id='cs-extra-info'></div>
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AggregateJobTask from './AggregateJobTask';

/**
 * The AggregateJobCode model module.
 * @module ChronoSheetsClient/ChronoSheetsClientLibModel/AggregateJobCode
 * @version 1.0.0
 */
class AggregateJobCode {
    /**
     * Constructs a new <code>AggregateJobCode</code>.
     * @alias module:ChronoSheetsClient/ChronoSheetsClientLibModel/AggregateJobCode
     */
    constructor() { 
        
        AggregateJobCode.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AggregateJobCode</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:ChronoSheetsClient/ChronoSheetsClientLibModel/AggregateJobCode} obj Optional instance to populate.
     * @return {module:ChronoSheetsClient/ChronoSheetsClientLibModel/AggregateJobCode} The populated <code>AggregateJobCode</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AggregateJobCode();

            if (data.hasOwnProperty('AvailableTasks')) {
                obj['AvailableTasks'] = ApiClient.convertToType(data['AvailableTasks'], [AggregateJobTask]);
            }
            if (data.hasOwnProperty('PermittedEmployees')) {
                obj['PermittedEmployees'] = ApiClient.convertToType(data['PermittedEmployees'], ['Number']);
            }
            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'Number');
            }
            if (data.hasOwnProperty('Code')) {
                obj['Code'] = ApiClient.convertToType(data['Code'], 'String');
            }
            if (data.hasOwnProperty('Client')) {
                obj['Client'] = ApiClient.convertToType(data['Client'], 'String');
            }
            if (data.hasOwnProperty('ClientId')) {
                obj['ClientId'] = ApiClient.convertToType(data['ClientId'], 'Number');
            }
            if (data.hasOwnProperty('Project')) {
                obj['Project'] = ApiClient.convertToType(data['Project'], 'String');
            }
            if (data.hasOwnProperty('ProjectId')) {
                obj['ProjectId'] = ApiClient.convertToType(data['ProjectId'], 'Number');
            }
            if (data.hasOwnProperty('OrganisationId')) {
                obj['OrganisationId'] = ApiClient.convertToType(data['OrganisationId'], 'Number');
            }
            if (data.hasOwnProperty('IsDeleted')) {
                obj['IsDeleted'] = ApiClient.convertToType(data['IsDeleted'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * The list of available tasks under this job code
 * @member {Array.<module:ChronoSheetsClient/ChronoSheetsClientLibModel/AggregateJobTask>} AvailableTasks
 */
AggregateJobCode.prototype['AvailableTasks'] = undefined;

/**
 * The list of employee IDs that are permitted to record timesheets with this job code (empty means everyone)
 * @member {Array.<Number>} PermittedEmployees
 */
AggregateJobCode.prototype['PermittedEmployees'] = undefined;

/**
 * The ID of the job code (not the code itself)
 * @member {Number} Id
 */
AggregateJobCode.prototype['Id'] = undefined;

/**
 * The job code itself
 * @member {String} Code
 */
AggregateJobCode.prototype['Code'] = undefined;

/**
 * The name of the client
 * @member {String} Client
 */
AggregateJobCode.prototype['Client'] = undefined;

/**
 * The ID of the client
 * @member {Number} ClientId
 */
AggregateJobCode.prototype['ClientId'] = undefined;

/**
 * The name of the project
 * @member {String} Project
 */
AggregateJobCode.prototype['Project'] = undefined;

/**
 * The ID of the project
 * @member {Number} ProjectId
 */
AggregateJobCode.prototype['ProjectId'] = undefined;

/**
 * Your organisation ID
 * @member {Number} OrganisationId
 */
AggregateJobCode.prototype['OrganisationId'] = undefined;

/**
 * A flag indicating whether or not the job code has been marked as deleted
 * @member {Boolean} IsDeleted
 */
AggregateJobCode.prototype['IsDeleted'] = undefined;






export default AggregateJobCode;

