/**
 * ChronoSheets API
 * <div style='font-size: 14px!important;font-family: Open Sans,sans-serif!important;color: #3b4151!important;'><p>      ChronoSheets is a flexible timesheet solution for small to medium businesses, it is free for small teams of up to 3 and there are iOS and Android apps available.  Use the ChronoSheets API to create your own custom integrations.  Before starting, sign up for a ChronoSheets account at <a target='_BLANK' href='http://tsheets.xyz/signup'>http://tsheets.xyz/signup</a>.  </p></div><div id='cs-extra-info'></div>
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InsertClientRequest model module.
 * @module ChronoSheetsClient/ChronoSheetsClientLibModel/InsertClientRequest
 * @version 1.0.0
 */
class InsertClientRequest {
    /**
     * Constructs a new <code>InsertClientRequest</code>.
     * Fields for inserting a new Client
     * @alias module:ChronoSheetsClient/ChronoSheetsClientLibModel/InsertClientRequest
     */
    constructor() { 
        
        InsertClientRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InsertClientRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:ChronoSheetsClient/ChronoSheetsClientLibModel/InsertClientRequest} obj Optional instance to populate.
     * @return {module:ChronoSheetsClient/ChronoSheetsClientLibModel/InsertClientRequest} The populated <code>InsertClientRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InsertClientRequest();

            if (data.hasOwnProperty('ClientName')) {
                obj['ClientName'] = ApiClient.convertToType(data['ClientName'], 'String');
            }
            if (data.hasOwnProperty('ClientAddressLine1')) {
                obj['ClientAddressLine1'] = ApiClient.convertToType(data['ClientAddressLine1'], 'String');
            }
            if (data.hasOwnProperty('ClientAddressLine2')) {
                obj['ClientAddressLine2'] = ApiClient.convertToType(data['ClientAddressLine2'], 'String');
            }
            if (data.hasOwnProperty('ClientSuburb')) {
                obj['ClientSuburb'] = ApiClient.convertToType(data['ClientSuburb'], 'String');
            }
            if (data.hasOwnProperty('ClientState')) {
                obj['ClientState'] = ApiClient.convertToType(data['ClientState'], 'String');
            }
            if (data.hasOwnProperty('ClientPostCode')) {
                obj['ClientPostCode'] = ApiClient.convertToType(data['ClientPostCode'], 'String');
            }
            if (data.hasOwnProperty('PersonOfContact')) {
                obj['PersonOfContact'] = ApiClient.convertToType(data['PersonOfContact'], 'String');
            }
            if (data.hasOwnProperty('ClientPhoneNumber')) {
                obj['ClientPhoneNumber'] = ApiClient.convertToType(data['ClientPhoneNumber'], 'String');
            }
            if (data.hasOwnProperty('ClientMobileNumber')) {
                obj['ClientMobileNumber'] = ApiClient.convertToType(data['ClientMobileNumber'], 'String');
            }
            if (data.hasOwnProperty('ClientEmailAddress')) {
                obj['ClientEmailAddress'] = ApiClient.convertToType(data['ClientEmailAddress'], 'String');
            }
            if (data.hasOwnProperty('ClientWebURL')) {
                obj['ClientWebURL'] = ApiClient.convertToType(data['ClientWebURL'], 'String');
            }
        }
        return obj;
    }


}

/**
 * The name of the Client
 * @member {String} ClientName
 */
InsertClientRequest.prototype['ClientName'] = undefined;

/**
 * Address line 1 of the Client
 * @member {String} ClientAddressLine1
 */
InsertClientRequest.prototype['ClientAddressLine1'] = undefined;

/**
 * Address line 2 of the Client
 * @member {String} ClientAddressLine2
 */
InsertClientRequest.prototype['ClientAddressLine2'] = undefined;

/**
 * The suburb of the Client's address
 * @member {String} ClientSuburb
 */
InsertClientRequest.prototype['ClientSuburb'] = undefined;

/**
 * The state of the Client's address
 * @member {String} ClientState
 */
InsertClientRequest.prototype['ClientState'] = undefined;

/**
 * The post code of the Client's address
 * @member {String} ClientPostCode
 */
InsertClientRequest.prototype['ClientPostCode'] = undefined;

/**
 * The name of the contact working with the Client
 * @member {String} PersonOfContact
 */
InsertClientRequest.prototype['PersonOfContact'] = undefined;

/**
 * The phone number of the Client
 * @member {String} ClientPhoneNumber
 */
InsertClientRequest.prototype['ClientPhoneNumber'] = undefined;

/**
 * The mobile phone number of the Client
 * @member {String} ClientMobileNumber
 */
InsertClientRequest.prototype['ClientMobileNumber'] = undefined;

/**
 * The email address of the Client
 * @member {String} ClientEmailAddress
 */
InsertClientRequest.prototype['ClientEmailAddress'] = undefined;

/**
 * The Client's website URL
 * @member {String} ClientWebURL
 */
InsertClientRequest.prototype['ClientWebURL'] = undefined;






export default InsertClientRequest;

