/**
 * ChronoSheets API
 * <div style='font-size: 14px!important;font-family: Open Sans,sans-serif!important;color: #3b4151!important;'><p>      ChronoSheets is a flexible timesheet solution for small to medium businesses, it is free for small teams of up to 5 and there are iOS and Android apps available.  Use the ChronoSheets API to create your own custom integrations.  Before starting, sign up for a ChronoSheets account at <a target='_BLANK' href='http://tsheets.xyz/signup'>http://tsheets.xyz/signup</a>.  </p></div><div id='cs-extra-info'></div>
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ChronoSheetsClient/ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.JavascriptApiClientForChronoSheets) {
      root.JavascriptApiClientForChronoSheets = {};
    }
    root.JavascriptApiClientForChronoSheets.CSInsertTaskRequest = factory(root.JavascriptApiClientForChronoSheets.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The CSInsertTaskRequest model module.
   * @module ChronoSheetsClient/ChronoSheetsClientLibModel/CSInsertTaskRequest
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>CSInsertTaskRequest</code>.
   * Fields for inserting a new Task
   * @alias module:ChronoSheetsClient/ChronoSheetsClientLibModel/CSInsertTaskRequest
   * @class
   */
  var exports = function() {
    var _this = this;



  };

  /**
   * Constructs a <code>CSInsertTaskRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:ChronoSheetsClient/ChronoSheetsClientLibModel/CSInsertTaskRequest} obj Optional instance to populate.
   * @return {module:ChronoSheetsClient/ChronoSheetsClientLibModel/CSInsertTaskRequest} The populated <code>CSInsertTaskRequest</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('TaskName')) {
        obj['TaskName'] = ApiClient.convertToType(data['TaskName'], 'String');
      }
      if (data.hasOwnProperty('TripEnabled')) {
        obj['TripEnabled'] = ApiClient.convertToType(data['TripEnabled'], 'Boolean');
      }
    }
    return obj;
  }

  /**
   * The name of the Task.  Used to identify the Task when the user is selecting from a list of available Tasks
   * @member {String} TaskName
   */
  exports.prototype['TaskName'] = undefined;
  /**
   * Whether or not GPS Trip Tracking is enabled on this Task.  GPS Trip tracking is available on the iOS and Android apps.  If it's enabled an additional dialog is shown to the user after Task selection that allows the User to choose if they want to record the GPS data
   * @member {Boolean} TripEnabled
   */
  exports.prototype['TripEnabled'] = undefined;



  return exports;
}));


