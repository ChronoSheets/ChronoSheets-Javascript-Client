/*
 * ChronoSheets API
 * <div style='font-size: 14px!important;font-family: Open Sans,sans-serif!important;color: #3b4151!important;'><p>      ChronoSheets is a flexible timesheet solution for small to medium businesses, it is free for small teams of up to 3 and there are iOS and Android apps available.  Use the ChronoSheets API to create your own custom integrations.  Before starting, sign up for a ChronoSheets account at <a target='_BLANK' href='http://tsheets.xyz/signup'>http://tsheets.xyz/signup</a>.  </p></div><div id='cs-extra-info'></div>
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.12
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ChronoSheetsClient/ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.ChronoSheetsApi) {
      root.ChronoSheetsApi = {};
    }
    root.ChronoSheetsApi.CSRawReportItem = factory(root.ChronoSheetsApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The CSRawReportItem model module.
   * @module ChronoSheetsClient/ChronoSheetsClientLibModel/CSRawReportItem
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>CSRawReportItem</code>.
   * @alias module:ChronoSheetsClient/ChronoSheetsClientLibModel/CSRawReportItem
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>CSRawReportItem</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:ChronoSheetsClient/ChronoSheetsClientLibModel/CSRawReportItem} obj Optional instance to populate.
   * @return {module:ChronoSheetsClient/ChronoSheetsClientLibModel/CSRawReportItem} The populated <code>CSRawReportItem</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('OrganisationId'))
        obj.organisationId = ApiClient.convertToType(data['OrganisationId'], 'Number');
      if (data.hasOwnProperty('UserId'))
        obj.userId = ApiClient.convertToType(data['UserId'], 'Number');
      if (data.hasOwnProperty('Username'))
        obj.username = ApiClient.convertToType(data['Username'], 'String');
      if (data.hasOwnProperty('EmailAddress'))
        obj.emailAddress = ApiClient.convertToType(data['EmailAddress'], 'String');
      if (data.hasOwnProperty('JobCode'))
        obj.jobCode = ApiClient.convertToType(data['JobCode'], 'String');
      if (data.hasOwnProperty('TaskName'))
        obj.taskName = ApiClient.convertToType(data['TaskName'], 'String');
      if (data.hasOwnProperty('ClientName'))
        obj.clientName = ApiClient.convertToType(data['ClientName'], 'String');
      if (data.hasOwnProperty('ProjectName'))
        obj.projectName = ApiClient.convertToType(data['ProjectName'], 'String');
      if (data.hasOwnProperty('StartDate'))
        obj.startDate = ApiClient.convertToType(data['StartDate'], 'Date');
      if (data.hasOwnProperty('EndDate'))
        obj.endDate = ApiClient.convertToType(data['EndDate'], 'Date');
      if (data.hasOwnProperty('SpanSeconds'))
        obj.spanSeconds = ApiClient.convertToType(data['SpanSeconds'], 'Number');
      if (data.hasOwnProperty('Description'))
        obj.description = ApiClient.convertToType(data['Description'], 'String');
      if (data.hasOwnProperty('PayAmount'))
        obj.payAmount = ApiClient.convertToType(data['PayAmount'], 'Number');
      if (data.hasOwnProperty('PayOvertimeAmount'))
        obj.payOvertimeAmount = ApiClient.convertToType(data['PayOvertimeAmount'], 'Number');
      if (data.hasOwnProperty('TripCost'))
        obj.tripCost = ApiClient.convertToType(data['TripCost'], 'Number');
      if (data.hasOwnProperty('TripDistanceMeters'))
        obj.tripDistanceMeters = ApiClient.convertToType(data['TripDistanceMeters'], 'Number');
      if (data.hasOwnProperty('SpanSecondsNormalTime'))
        obj.spanSecondsNormalTime = ApiClient.convertToType(data['SpanSecondsNormalTime'], 'Number');
      if (data.hasOwnProperty('SpanSecondsOvertime'))
        obj.spanSecondsOvertime = ApiClient.convertToType(data['SpanSecondsOvertime'], 'Number');
    }
    return obj;
  }

  /**
   * @member {Number} organisationId
   */
  exports.prototype.organisationId = undefined;

  /**
   * @member {Number} userId
   */
  exports.prototype.userId = undefined;

  /**
   * @member {String} username
   */
  exports.prototype.username = undefined;

  /**
   * @member {String} emailAddress
   */
  exports.prototype.emailAddress = undefined;

  /**
   * @member {String} jobCode
   */
  exports.prototype.jobCode = undefined;

  /**
   * @member {String} taskName
   */
  exports.prototype.taskName = undefined;

  /**
   * @member {String} clientName
   */
  exports.prototype.clientName = undefined;

  /**
   * @member {String} projectName
   */
  exports.prototype.projectName = undefined;

  /**
   * @member {Date} startDate
   */
  exports.prototype.startDate = undefined;

  /**
   * @member {Date} endDate
   */
  exports.prototype.endDate = undefined;

  /**
   * @member {Number} spanSeconds
   */
  exports.prototype.spanSeconds = undefined;

  /**
   * @member {String} description
   */
  exports.prototype.description = undefined;

  /**
   * @member {Number} payAmount
   */
  exports.prototype.payAmount = undefined;

  /**
   * @member {Number} payOvertimeAmount
   */
  exports.prototype.payOvertimeAmount = undefined;

  /**
   * @member {Number} tripCost
   */
  exports.prototype.tripCost = undefined;

  /**
   * @member {Number} tripDistanceMeters
   */
  exports.prototype.tripDistanceMeters = undefined;

  /**
   * @member {Number} spanSecondsNormalTime
   */
  exports.prototype.spanSecondsNormalTime = undefined;

  /**
   * @member {Number} spanSecondsOvertime
   */
  exports.prototype.spanSecondsOvertime = undefined;

  return exports;

}));
