/**
 * ChronoSheets API
 * <div style='font-size: 14px!important;font-family: Open Sans,sans-serif!important;color: #3b4151!important;'><p>      ChronoSheets is a flexible timesheet solution for small to medium businesses, it is free for small teams of up to 5 and there are iOS and Android apps available.  Use the ChronoSheets API to create your own custom integrations.  Before starting, sign up for a ChronoSheets account at <a target='_BLANK' href='http://tsheets.xyz/signup'>http://tsheets.xyz/signup</a>.  </p></div><div id='cs-extra-info'></div>
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.JavascriptApiClientForChronoSheets);
  }
}(this, function(expect, JavascriptApiClientForChronoSheets) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new JavascriptApiClientForChronoSheets.ReportsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ReportsApi', function() {
    describe('reportsGetAllChartsDataAdmin', function() {
      it('should call reportsGetAllChartsDataAdmin successfully', function(done) {
        //uncomment below and update the code to test reportsGetAllChartsDataAdmin
        //instance.reportsGetAllChartsDataAdmin(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reportsGetAllChartsDataUser', function() {
      it('should call reportsGetAllChartsDataUser successfully', function(done) {
        //uncomment below and update the code to test reportsGetAllChartsDataUser
        //instance.reportsGetAllChartsDataUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reportsGetFleetSummaryAdmin', function() {
      it('should call reportsGetFleetSummaryAdmin successfully', function(done) {
        //uncomment below and update the code to test reportsGetFleetSummaryAdmin
        //instance.reportsGetFleetSummaryAdmin(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reportsGetOrgTripById', function() {
      it('should call reportsGetOrgTripById successfully', function(done) {
        //uncomment below and update the code to test reportsGetOrgTripById
        //instance.reportsGetOrgTripById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reportsGetOrganisationTimesheetFileAttachments', function() {
      it('should call reportsGetOrganisationTimesheetFileAttachments successfully', function(done) {
        //uncomment below and update the code to test reportsGetOrganisationTimesheetFileAttachments
        //instance.reportsGetOrganisationTimesheetFileAttachments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reportsGetOrganisationTranscripts', function() {
      it('should call reportsGetOrganisationTranscripts successfully', function(done) {
        //uncomment below and update the code to test reportsGetOrganisationTranscripts
        //instance.reportsGetOrganisationTranscripts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reportsGetOrganisationTrips', function() {
      it('should call reportsGetOrganisationTrips successfully', function(done) {
        //uncomment below and update the code to test reportsGetOrganisationTrips
        //instance.reportsGetOrganisationTrips(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reportsGetRawDataAdmin', function() {
      it('should call reportsGetRawDataAdmin successfully', function(done) {
        //uncomment below and update the code to test reportsGetRawDataAdmin
        //instance.reportsGetRawDataAdmin(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reportsProjectCostingsAdmin', function() {
      it('should call reportsProjectCostingsAdmin successfully', function(done) {
        //uncomment below and update the code to test reportsProjectCostingsAdmin
        //instance.reportsProjectCostingsAdmin(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reportsUserJobsOverTime', function() {
      it('should call reportsUserJobsOverTime successfully', function(done) {
        //uncomment below and update the code to test reportsUserJobsOverTime
        //instance.reportsUserJobsOverTime(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
